# requires full entity ids
play_tts_at_volume:
  alias: Play TTS at Volume
  mode: queued
  variables:
    media_player: "{{ media_player }}"
    volume_level: "{{ volume_level }}"
    tts_service: "{{ tts_service }}"
    tts_speak_entity: "{{ tts_speak_entity }}"
    message: "{{ message }}"
  sequence:
    - choose:
        - conditions: "{{ not not media_player and not not volume_level and not not tts_service and not not message }}"
          sequence:
            # turn on if not already on
            - choose:
                - conditions: "{{ states(media_player) != 'idle' }}"
                  sequence:
                    - service: media_player.turn_on
                      target:
                        entity_id: "{{ media_player }}"
                    # Wait for idle with timeout
                    - wait_template: "{{ states(media_player) == 'idle' }}"
                      timeout: "00:00:05"
            # store the current volume level
            - variables:
                old_volume_level: "{{ state_attr(media_player, 'volume_level') or volume_level }}"
            # set the volume level
            - service: media_player.volume_set
              data:
                volume_level: "{{ volume_level }}"
              target:
                entity_id: "{{ media_player }}"
            # Pre alert sound
            - service: media_player.play_media
              data:
                media_content_id: https://hassio.familynetworkcentral.com/local/audio/alert.wav
                media_content_type: "music"
              target:
                entity_id: "{{ media_player }}"
            - delay: 1
            # Wait for idle with timeout
            - wait_template: "{{ states(media_player) == 'idle' }}"
              timeout: "00:00:10"
            # start message
            - service: python_script.play_tts
              data:
                media_player: "{{ media_player }}"
                tts_service: "{{ tts_service }}"
                tts_speak_entity: "{{ tts_speak_entity }}"
                message: "{{ message }}"
            - delay: 1
            # Wait for idle with timeout
            - wait_template: "{{ states(media_player) == 'idle' }}"
              timeout: "00:00:10"
            # set the volume level back
            - service: media_player.volume_set
              data:
                volume_level: "{{ old_volume_level }}"
              target:
                entity_id: "{{ media_player }}"

      default:
        - service: system_log.write
          data:
            level: warning
            logger: script.play_tts_at_volume
            message: "Not all variables were provided! media_player:  {{ media_player }}; volume_level: {{ volume_level }}; tts_service: {{ tts_service }}; message: {{ message }}"
